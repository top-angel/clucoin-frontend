name: Build & Publish

on:
  release:
    types: [created]
  workflow_run:
    workflows: ["Lint & Test"]
    branches: ["staging"]
    types: ["completed"]

jobs:
  build:
    if: (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push') || github.event_name == 'release'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get branch
        id: branch
        run: |
          if ${{ github.event_name == 'push' }}; then
            echo "::set-output name=branch::staging"
          else
            echo "::set-output name=branch::main"
          fi

      - name: Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.branch.outputs.branch }}

      - name: Create SHA Container Tag
        id: sha_tag
        run: |
          tag=$(cut -c 1-7 <<< $GITHUB_SHA)
          echo "::set-output name=tag::$tag"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: |
            STAGING=${{ github.event_name == 'push' }}
          cache-to: type=local,dest=/tmp/.buildx-cache
          cache-from: type=local,src=/tmp/.buildx-cache
          tags: |
            ghcr.io/clucoininc/frontend:${{ steps.branch.outputs.branch }}-${{ steps.sha_tag.outputs.tag }}
            ghcr.io/clucoininc/frontend:${{ steps.branch.outputs.branch }}-latest
            ghcr.io/clucoininc/frontend:latest

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Get branch
        id: branch
        run: |
          if ${{ github.event_name == 'push' }}; then
            echo "::set-output name=branch::staging"
            echo "::set-output name=namespace::staging"
          else
            echo "::set-output name=branch::main"
            echo "::set-output name=namespace::default"
          fi

      - name: Create SHA Container Tag
        id: sha_tag
        run: |
          tag=$(cut -c 1-7 <<< $GITHUB_SHA)
          echo "::set-output name=tag::$tag"

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SECRET_GITHUB_TOKEN }}
          repository: clucoininc/kubernetes

      - name: Authenticate with Kubernetes
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            ${{ steps.branch.outputs.branch }}/frontend/deployment.yaml
          images: "ghcr.io/clucoininc/frontend:${{ steps.branch.outputs.branch }}-${{ steps.sha_tag.outputs.tag }}"
          kubectl-version: "latest"
          namespace: ${{ steps.branch.outputs.namespace }}

      - name: Purge Cloudflare Edge Cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: cc863d063e1a96d7b9699b948b09b256
          CLOUDFLARE_TOKEN: ${{ secrets.CF_TOKEN }}
